{"ast":null,"code":"var _jsxFileName = \"/Users/kuba/Documents/react-project/crypto-app/src/auth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { supabase } from \"./supabase\";\nimport { useState, useEffect, useContext, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const auth = useProvideAuth();\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthProvider, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n\n  return useContext(authContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  _s3();\n\n  const [user, setUser] = useState(null);\n\n  const login = async email => {\n    const {\n      error,\n      user\n    } = await supabase.auth.signIn({\n      email\n    });\n\n    if (error) {\n      console.log(error);\n    }\n\n    return {\n      error,\n      user\n    };\n  };\n\n  const logout = async () => {\n    const {\n      error\n    } = await supabase.auth.signOut();\n\n    if (error) {\n      console.log(error);\n    }\n\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const user = supabase.auth.user();\n    setUser(user);\n    const auth = supabase.auth.onAuthStateChange((event, session) => {\n      if (event === 'SIGNED_IN') {\n        setUser(session.user);\n      }\n\n      if (event === 'SIGNED_OUT') {\n        setUser(null);\n      }\n    });\n    return () => auth.data.unsubscribe();\n  }, []);\n  return {\n    user,\n    login,\n    logout\n  };\n}\n\n_s3(useProvideAuth, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["supabase","useState","useEffect","useContext","createContext","authContext","AuthProvider","children","auth","useProvideAuth","useAuth","user","setUser","login","email","error","signIn","console","log","logout","signOut","onAuthStateChange","event","session","data","unsubscribe"],"sources":["/Users/kuba/Documents/react-project/crypto-app/src/auth.js"],"sourcesContent":["import {supabase} from \"./supabase\";\nimport {useState, useEffect, useContext, createContext} from \"react\";\n\nconst authContext = createContext();\n\nexport const AuthProvider = ({children}) => {\n    const auth = useProvideAuth()\n    return <authContext.Provider value={auth}>{children}</authContext.Provider>\n}\n\nexport const useAuth = () => {\n    return useContext(authContext)\n}\n\nfunction useProvideAuth() {\n    const [user, setUser] = useState(null)\n\n    const login = async (email) => {\n        const {error, user} = await supabase.auth.signIn({email})\n\n        if(error) {\n            console.log(error)\n        }\n\n        return {error, user}\n    }\n\n    const logout = async () => {\n        const {error} = await supabase.auth.signOut()\n\n        if(error) {\n            console.log(error)\n        }\n\n        setUser(null)\n    }\n\n    useEffect(() => {\n        const user = supabase.auth.user()\n        setUser(user)\n\n        const auth = supabase.auth.onAuthStateChange((event, session) => {\n            if (event === 'SIGNED_IN') {\n                setUser(session.user)\n            }\n\n            if (event === 'SIGNED_OUT') {\n                setUser(null)\n            }\n        })\n\n        return () => auth.data.unsubscribe()\n\n    }, [])\n\n    return {\n        user,\n        login,\n        logout\n    }\n\n}"],"mappings":";;;;;AAAA,SAAQA,QAAR,QAAuB,YAAvB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,UAA7B,EAAyCC,aAAzC,QAA6D,OAA7D;;AAEA,MAAMC,WAAW,gBAAGD,aAAa,EAAjC;AAEA,OAAO,MAAME,YAAY,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EACxC,MAAMC,IAAI,GAAGC,cAAc,EAA3B;EACA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAED,IAA7B;IAAA,UAAoCD;EAApC;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAHM;;GAAMD,Y;UACIG,c;;;KADJH,Y;AAKb,OAAO,MAAMI,OAAO,GAAG,MAAM;EAAA;;EACzB,OAAOP,UAAU,CAACE,WAAD,CAAjB;AACH,CAFM;;IAAMK,O;;AAIb,SAASD,cAAT,GAA0B;EAAA;;EACtB,MAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;;EAEA,MAAMY,KAAK,GAAG,MAAOC,KAAP,IAAiB;IAC3B,MAAM;MAACC,KAAD;MAAQJ;IAAR,IAAgB,MAAMX,QAAQ,CAACQ,IAAT,CAAcQ,MAAd,CAAqB;MAACF;IAAD,CAArB,CAA5B;;IAEA,IAAGC,KAAH,EAAU;MACNE,OAAO,CAACC,GAAR,CAAYH,KAAZ;IACH;;IAED,OAAO;MAACA,KAAD;MAAQJ;IAAR,CAAP;EACH,CARD;;EAUA,MAAMQ,MAAM,GAAG,YAAY;IACvB,MAAM;MAACJ;IAAD,IAAU,MAAMf,QAAQ,CAACQ,IAAT,CAAcY,OAAd,EAAtB;;IAEA,IAAGL,KAAH,EAAU;MACNE,OAAO,CAACC,GAAR,CAAYH,KAAZ;IACH;;IAEDH,OAAO,CAAC,IAAD,CAAP;EACH,CARD;;EAUAV,SAAS,CAAC,MAAM;IACZ,MAAMS,IAAI,GAAGX,QAAQ,CAACQ,IAAT,CAAcG,IAAd,EAAb;IACAC,OAAO,CAACD,IAAD,CAAP;IAEA,MAAMH,IAAI,GAAGR,QAAQ,CAACQ,IAAT,CAAca,iBAAd,CAAgC,CAACC,KAAD,EAAQC,OAAR,KAAoB;MAC7D,IAAID,KAAK,KAAK,WAAd,EAA2B;QACvBV,OAAO,CAACW,OAAO,CAACZ,IAAT,CAAP;MACH;;MAED,IAAIW,KAAK,KAAK,YAAd,EAA4B;QACxBV,OAAO,CAAC,IAAD,CAAP;MACH;IACJ,CARY,CAAb;IAUA,OAAO,MAAMJ,IAAI,CAACgB,IAAL,CAAUC,WAAV,EAAb;EAEH,CAhBQ,EAgBN,EAhBM,CAAT;EAkBA,OAAO;IACHd,IADG;IAEHE,KAFG;IAGHM;EAHG,CAAP;AAMH;;IA/CQV,c"},"metadata":{},"sourceType":"module"}