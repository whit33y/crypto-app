[{"/Users/kuba/Documents/react-project/crypto-app/src/index.js":"1","/Users/kuba/Documents/react-project/crypto-app/src/App.js":"2","/Users/kuba/Documents/react-project/crypto-app/src/Components/CryptoDetails.js":"3","/Users/kuba/Documents/react-project/crypto-app/src/Components/ShowCrypto.js":"4","/Users/kuba/Documents/react-project/crypto-app/src/supabase.js":"5","/Users/kuba/Documents/react-project/crypto-app/src/Layouts/Navbar.js":"6","/Users/kuba/Documents/react-project/crypto-app/src/contexts/Auth.js":"7","/Users/kuba/Documents/react-project/crypto-app/src/layouts/Navbar.js":"8","/Users/kuba/Documents/react-project/crypto-app/src/components/ShowCrypto.js":"9","/Users/kuba/Documents/react-project/crypto-app/src/components/CryptoDetails.js":"10","/Users/kuba/Documents/react-project/crypto-app/src/components/About.js":"11","/Users/kuba/Documents/react-project/crypto-app/src/components/Login.js":"12","/Users/kuba/Documents/react-project/crypto-app/src/components/Crypto.js":"13","/Users/kuba/Documents/react-project/crypto-app/src/components/Signup.js":"14","/Users/kuba/Documents/react-project/crypto-app/src/components/Welcome.js":"15","/Users/kuba/Documents/react-project/crypto-app/src/components/ProtectedRoute.js":"16","/Users/kuba/Documents/react-project/crypto-app/src/layouts/Footer.js":"17","/Users/kuba/Documents/react-project/crypto-app/src/components/AllCryptoDetails.js":"18"},{"size":251,"mtime":1659469274540,"results":"19","hashOfConfig":"20"},{"size":1040,"mtime":1659776845674,"results":"21","hashOfConfig":"20"},{"size":759,"mtime":1659086054537,"results":"22","hashOfConfig":"20"},{"size":849,"mtime":1659382850403,"results":"23","hashOfConfig":"20"},{"size":226,"mtime":1659289546886,"results":"24","hashOfConfig":"20"},{"size":937,"mtime":1659382775340,"results":"25","hashOfConfig":"20"},{"size":1000,"mtime":1659683802868,"results":"26","hashOfConfig":"20"},{"size":1206,"mtime":1659688179274,"results":"27","hashOfConfig":"20"},{"size":984,"mtime":1659895274628,"results":"28","hashOfConfig":"20"},{"size":820,"mtime":1659880533047,"results":"29","hashOfConfig":"20"},{"size":297,"mtime":1659617750124,"results":"30","hashOfConfig":"20"},{"size":1470,"mtime":1659611148855,"results":"31","hashOfConfig":"20"},{"size":1271,"mtime":1659697994222,"results":"32","hashOfConfig":"20"},{"size":1328,"mtime":1659608517991,"results":"33","hashOfConfig":"20"},{"size":918,"mtime":1659690095248,"results":"34","hashOfConfig":"20"},{"size":246,"mtime":1659466898178,"results":"35","hashOfConfig":"20"},{"size":208,"mtime":1659608436579,"results":"36","hashOfConfig":"20"},{"size":2848,"mtime":1659780782063,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1m9koi5",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"41"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"41"},"/Users/kuba/Documents/react-project/crypto-app/src/index.js",[],[],[],"/Users/kuba/Documents/react-project/crypto-app/src/App.js",[],[],"/Users/kuba/Documents/react-project/crypto-app/src/Components/CryptoDetails.js",[],[],[],"/Users/kuba/Documents/react-project/crypto-app/src/Components/ShowCrypto.js",["97"],[],"/Users/kuba/Documents/react-project/crypto-app/src/supabase.js",[],[],"/Users/kuba/Documents/react-project/crypto-app/src/Layouts/Navbar.js",[],[],"/Users/kuba/Documents/react-project/crypto-app/src/contexts/Auth.js",[],[],"/Users/kuba/Documents/react-project/crypto-app/src/layouts/Navbar.js",[],[],"/Users/kuba/Documents/react-project/crypto-app/src/components/ShowCrypto.js",["98"],[],"/Users/kuba/Documents/react-project/crypto-app/src/components/CryptoDetails.js",[],[],"/Users/kuba/Documents/react-project/crypto-app/src/components/About.js",[],[],"/Users/kuba/Documents/react-project/crypto-app/src/components/Login.js",["99"],[],"import {useRef, useState} from 'react'\nimport { Link , useNavigate} from 'react-router-dom'\nimport Navbar from '../layouts/Navbar'\nimport Footer from '../layouts/Footer'\n\nimport { useAuth } from '../contexts/Auth'\n\n\nexport function Login(){\n    const emailRef = useRef()\n    const passwordRef = useRef()\n\n    const { signIn } = useAuth()\n\n    const navigate = useNavigate() \n\n\n    async function handleSubmit(e){\n        e.preventDefault()\n\n        const email = emailRef.current.value\n        const password = passwordRef.current.value\n\n        const { error } = await signIn({ email, password })\n\n        if (error) {\n          alert('Wrong email or password.')\n        } else {\n          // Redirect user to Dashboard\n          navigate('/')\n        }\n    }\n    return(\n        <div className='container'>\n            <Navbar />\n            <form onSubmit={handleSubmit}>\n                <label htmlFor='input-email'>Email</label>\n                <input id='input-email' type='email' ref={emailRef} />\n                <label htmlFor='input-password'>Password</label>\n                <input id='input-password' type='password' ref={passwordRef} />\n                <button type='submit'>Login</button>\n            </form>\n            <p>\n                Don't have an account? <Link to=\"/signup\">Sign up</Link>\n            </p>\n            <h5>\n                You must be logged in to acces Cryptos info\n            </h5>\n            <Footer />\n        </div>\n    )\n}\n","/Users/kuba/Documents/react-project/crypto-app/src/components/Crypto.js",[],[],"/Users/kuba/Documents/react-project/crypto-app/src/components/Signup.js",["100"],[],"import {useRef, useState} from 'react'\nimport {Link, useNavigate} from 'react-router-dom'\nimport Navbar from '../layouts/Navbar'\nimport Footer from '../layouts/Footer'\n\nimport { useAuth } from '../contexts/Auth'\n\nexport function Signup(){\n    const emailRef = useRef()\n    const passwordRef = useRef()\n\n    const { signUp } = useAuth()\n\n    const navigate = useNavigate()\n\n    async function handleSubmit(e){\n        e.preventDefault()\n        const email = emailRef.current.value\n        const password = passwordRef.current.value\n\n        const { error } = await signUp({ email, password })\n\n        if (error) {\n            alert('error signing in')\n        } else {\n            navigate('/')\n        }\n    }\n    return(\n        <div className='container'>\n            <Navbar />\n            <form onSubmit={handleSubmit}>\n                <label htmlFor='input-email'>Email</label>\n                <input id='input-email' type='email' ref={emailRef} />\n                <label htmlFor='input-password'>Password</label>\n                <input id='input-password' type='password' ref={passwordRef} />\n                <button type='submit'>Sign up</button>\n            </form>\n            <p>\n                Already have an account? <Link to=\"/login\">Log In</Link>\n            </p>\n            <Footer />\n        </div>\n    )\n}\n","/Users/kuba/Documents/react-project/crypto-app/src/components/Welcome.js",[],[],"/Users/kuba/Documents/react-project/crypto-app/src/components/ProtectedRoute.js",[],[],"/Users/kuba/Documents/react-project/crypto-app/src/layouts/Footer.js",[],[],"/Users/kuba/Documents/react-project/crypto-app/src/components/AllCryptoDetails.js",["101","102","103"],[],"import React from 'react'\nimport Navbar from '../layouts/Navbar'\nimport Footer from '../layouts/Footer'\nimport {useEffect, useState} from 'react'\n\n\nfunction AllCryptoDetails() {\n    const [cryptoData, setCryptoData] = useState()\n    useEffect(()=>{\n        let search = window.location.search\n        let params = new URLSearchParams(search)\n        let foo = params.get('q')\n        fetch(`https://api.coingecko.com/api/v3/coins/${foo}?localization=true&tickers=false&market_data=true&community_data=true&developer_data=false&sparkline=true`)\n        .then((res)=> res.json())\n        .then((data)=>setCryptoData(data))\n    },[])\n    \n    if(!cryptoData){\n        return(\n            <div className='container'>\n                <Navbar />\n                <Footer />\n            </div>\n        )\n    }\n    return (\n        <div className='container'>\n            <Navbar />\n            <button><a href='/crypto'>Back to cryptos</a></button>\n            <div className='showCryptoHeader'>\n                <img src={`${cryptoData.image.large}`} className='showCryptoImg'/>\n                <h2>{cryptoData.name} - {cryptoData.symbol}</h2>\n                <h6>Market rank: {cryptoData.market_cap_rank}</h6>\n            </div>\n            <div className='showCryptoContent'>\n                <p>Highest price(24h): {cryptoData.market_data.high_24h.usd} USD <br />Lowest price(24h): {cryptoData.market_data.low_24h.usd} USD <br /> Price change(24h): {Math.floor(cryptoData.market_data.price_change_24h_in_currency.usd * 1000)/1000} USD</p>\n                <b><p>Current price in different currencies</p></b> \n                <p>🇺🇸 {cryptoData.market_data.current_price.usd}usd 🇵🇱 {cryptoData.market_data.current_price.pln}pln 🇪🇺 {cryptoData.market_data.current_price.eur}eur 🇯🇵 {cryptoData.market_data.current_price.jpy}jpy<br/> 🇨🇳{cryptoData.market_data.current_price.cny}cny 🇬🇧{cryptoData.market_data.current_price.gbp}gbp 🇦🇺{cryptoData.market_data.current_price.aud}aud🇨🇭{cryptoData.market_data.current_price.chf}chf</p>\n                <p>All time highest price: {cryptoData.market_data.ath.usd} usd 📈<br />All time lowest price: {cryptoData.market_data.atl.usd} usd 📉</p>\n                <div className='showCryptoLinks'>\n                <a href={cryptoData.links.homepage[0]}>Visit official {cryptoData.name} website <img src={`${cryptoData.image.thumb}`}/></a>\n                <br />\n                <a href={cryptoData.links.official_forum_url[0]}>Visit official {cryptoData.name} community forum <img src={`${cryptoData.image.thumb}`}/></a>\n                </div>\n            <div className='showCryptoFooter'>\n                <h6>Last update: {cryptoData.last_updated}</h6>\n            </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\nexport default AllCryptoDetails",{"ruleId":"104","severity":1,"message":"105","line":11,"column":9,"nodeType":"106","endLine":11,"endColumn":53},{"ruleId":"104","severity":1,"message":"105","line":11,"column":9,"nodeType":"106","endLine":11,"endColumn":64},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":31,"column":17,"nodeType":"106","endLine":31,"endColumn":83},{"ruleId":"104","severity":1,"message":"105","line":41,"column":97,"nodeType":"106","endLine":41,"endColumn":137},{"ruleId":"104","severity":1,"message":"105","line":43,"column":115,"nodeType":"106","endLine":43,"endColumn":155},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar"]